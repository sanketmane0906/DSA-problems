Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

You must implement the solution with O(log n) runtime complexity, which makes a binary search the most appropriate approach.

Input: nums = [1,3,5,6], target = 2
Output: 1

So lets code it :-

public class Solution
{
    public int searchInsertPosition(int[] nums, int target)
    {
                    int n=nums.length;
    
                    int s=0;
                    int e=n-1;
    
                    while(s<=e)
                    {
                        int mid=(s+e)/2;
    
                        if(nums[mid]==target)
                        {
                            return mid;
                        }
                        else if(nums[mid]>target)
                        {
                            e=mid-1;
                        }
                        else
                        {
                            s=mid+1;
                        }
                    }
                    return s;
    }
}
