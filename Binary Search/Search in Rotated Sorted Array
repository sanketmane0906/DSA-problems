In this problem we have given a nums array and target we have to find target and return its index

So lets understand this,

Here we can see here if you divide array in 2 parts then both are sorted in ascending order.

nums = [4,5,6,7,0,1,2]

       
4,5,6,7    0,1,2
as you can see in above example we have seen that both parts are sorted so now we will see how will we traverse


this below code helps you to traverse in left part of array

if(nums[low]<=nums[mid])
{
if(target>=nums[low] && nums[mid]<target)
{
low=mid-1;
}
else
{
high=mid+1;
}
}

now we will see how can we traverse on right side of array

else if(nums[mid]>nums[high])
{
if(target>nums[mid]&& target<=nums[right])
{
left=mid+1;
}
else
{
right=mid-1;
}
}

now lets code it:-

class Solution {
    public int search(int[] nums, int target) {
        
        int n=nums.length;

        int low=0;
        int high=n-1;

        while(low<=high)
        {
            int mid=(low+high)/2;

            if(nums[mid]==target)
            {
                return mid;
            }
            else if(nums[low]<=nums[mid])
            {
                if(target>=nums[low] && target<nums[mid])
                {
                    high=mid-1;
                }
                else
                {
                    low=mid+1;
                }
            }
            else
            {
                if(target>nums[mid] && target<=nums[high])
                {
                    low=mid+1;
                }
                else
                {
                    high=mid-1;
                }
            }
        }
        return -1;
    }
}
